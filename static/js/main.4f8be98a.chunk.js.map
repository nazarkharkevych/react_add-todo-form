{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","_ref","user","name","email","_jsx","className","href","concat","children","TodoInfo","todo","id","title","completed","_jsxs","classNames","TodoList","todos","map","username","userId","getUser","usersFromServer","find","App","_useState","useState","_useState2","_slicedToArray","setUser","_useState3","_useState4","setTitle","_useState5","todosFromServer","_objectSpread","_useState6","setTodos","_useState7","_useState8","userNotSelected","setUserNotSelected","_useState9","_useState10","titleNotSelected","setTitleNotSelected","regExp","action","method","onSubmit","e","preventDefault","form","target","formData","FormData","_Object$fromEntries","Object","fromEntries","entries","todoTitle","trimmedTitle","toString","trim","newTodo","Math","max","apply","_toConsumableArray","t","type","placeholder","value","onChange","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f8be98a.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction createTodos(): Todo[] {\n  return todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n}\n\nexport const App: React.FC = () => {\n  const [user, setUser] = useState('0');\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(() => createTodos());\n  const [userNotSelected, setUserNotSelected] = useState(false);\n  const [titleNotSelected, setTitleNotSelected] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const form = e.target as HTMLFormElement;\n    const formData = new FormData(form);\n\n    const { todoTitle, userId } = Object.fromEntries(formData.entries());\n\n    const trimmedTitle = todoTitle.toString().trim();\n\n    if (!userId) {\n      setUserNotSelected(true);\n    }\n\n    if (!trimmedTitle) {\n      setTitleNotSelected(true);\n    }\n\n    if (!userId || !trimmedTitle) {\n      return;\n    }\n\n    const largestId = Math.max(...todos.map(todo => todo.id));\n\n    const newTodo = {\n      id: largestId + 1,\n      title: trimmedTitle,\n      userId: +userId,\n      completed: false,\n      user: getUser(+userId),\n    };\n\n    setTodos(t => ([\n      ...t,\n      newTodo,\n    ]));\n    setUser('0');\n    setTitle('');\n  };\n\n  const regExp = /[^(a-z)(a-—è)\\d\\s]/gi;\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"todoTitle\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value.replace(regExp, ''));\n                setTitleNotSelected(false);\n              }}\n            />\n          </label>\n          {titleNotSelected && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              name=\"userId\"\n              value={user}\n              onChange={(e) => {\n                setUser(e.target.value);\n                setUserNotSelected(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ name, id }) => (\n                <option key={id} value={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n\n          {userNotSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}